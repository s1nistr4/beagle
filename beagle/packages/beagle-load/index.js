"use strict";var fs=require("fs"),path=require("path"),walk=require("beagle-walk"),assign=require("object-assign");module.exports=load;function load(a,b){return b=getOptions(b),a=JSON.parse(JSON.stringify(a)),walk(a,function(a){if(void 0===a.str&&("Include"===a.type||"RawInclude"===a.type||"Extends"===a.type)){var c=a.file;if("FileReference"!==c.type)throw new Error("Expected file.type to be \"FileReference\"");var d,e,f;try{d=b.resolve(c.path,c.filename,b),c.fullPath=d,f=b.read(d,b),e=f.toString("utf8")}catch(b){throw b.message+="\n    at "+a.filename+" line "+a.line,b}c.str=e,c.raw=f,("Extends"===a.type||"Include"===a.type)&&(c.ast=load.string(e,assign({},b,{filename:d})))}})}load.string=function(a,b){b=assign(getOptions(b),{src:a});var c=b.lex(a,b),d=b.parse(c,b);return load(d,b)},load.file=function(a,b){b=assign(getOptions(b),{filename:a});var c=b.read(a).toString("utf8");return load.string(c,b)},load.resolve=function(a,b,c){if(a=a.trim(),"/"!==a[0]&&!b)throw new Error("the \"filename\" option is required to use includes and extends with \"relative\" paths");if("/"===a[0]&&!c.basedir)throw new Error("the \"basedir\" option is required to use includes and extends with \"absolute\" paths");return a=path.join("/"===a[0]?c.basedir:path.dirname(b.trim()),a),a},load.read=function(a){return fs.readFileSync(a)},load.validateOptions=function(a){/* istanbul ignore if */if("object"!=typeof a)throw new TypeError("options must be an object");/* istanbul ignore if */if("function"!=typeof a.lex)throw new TypeError("options.lex must be a function");/* istanbul ignore if */if("function"!=typeof a.parse)throw new TypeError("options.parse must be a function");/* istanbul ignore if */if(a.resolve&&"function"!=typeof a.resolve)throw new TypeError("options.resolve must be a function");/* istanbul ignore if */if(a.read&&"function"!=typeof a.read)throw new TypeError("options.read must be a function")};function getOptions(a){return load.validateOptions(a),assign({resolve:load.resolve,read:load.read},a)}